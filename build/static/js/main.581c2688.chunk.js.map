{"version":3,"sources":["videojs/videojs-resolution-switcher.js","views/MoviesList.js","views/Search.js","views/Movie.js","views/NavBar.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["videojs","window","require","videoJsResolutionSwitcher","defaults","currentResolution","menuItemsHolder","setSourcesSanitized","player","sources","label","customSourcePicker","src","map","type","res","MenuItem","getComponent","ResolutionMenuItem","extend","constructor","options","onClickListener","this","call","on","onClick","initialySelected","showAsLabel","selected","addClass","innerHTML","options_","currentTime","player_","isPaused","paused","bigPlayButton","hide","handleSeekEvent","techName_","preload","one","handleTechSeeked_","play","trigger","MenuButton","ResolutionMenuButton","settings","initialySelectedLabel","controlText","dynamicLabel","el","appendChild","staticLabel","document","createElement","createItems","menuItems","labels","onClickUnselectOthers","clickedItem","item","removeClass","key","hasOwnProperty","push","length","mergeOptions","groupedSrc","compareResolutions","a","b","bucketSources","resolutions","source","initResolutionKey","appendSourceToKey","initResolutionForHLS","hls","tech_","playlists","master","_sources","value","uri","attributes","NAME","RESOLUTION","height","currentPlaylist","media","choosen","menuButton","initialySelectedRes","_player","_label","selectedResolution","selectedRes","selectPlaylist","HlsHandler","prototype","filter","playlist","classList","add","controlBar","resolutionSwitcher","addChild","updateSrc","_options","dispose","sort","selectedLabel","chooseSrc","el_","insertBefore","getChild","parentNode","removeChild","getGroupedSrc","ready","ytPlayer","setPlaybackQuality","addEventListener","qualities","getAvailableQualityLevels","_yts","highres","yt","hd1080","hd720","large","medium","small","tiny","auto","q","_yt","initResolutionForYt","plugin","MovieBox","props","console","log","class","style","alt","title","title_vietnamese","to","pathname","movieId","_id","className","React","Component","MoviesList","state","movieboxes","Object","keys","movies","k","Search","handleChange","bind","processTextDelay","processText","event","clearTimeout","target","setTimeout","txt","setState","fetch","then","r","json","jsonResp","status","response","catch","e","placeholder","aria-label","onChange","processSources","forEach","includes","IFramePlayer","iframeSrc","scrolling","frameborder","width","allowfullscreen","webkitallowfullscreen","mozallowfullscreen","MoviePlayer","updatePlayer","nextProps","nextState","movieSrcs","newSrcs","videoNode","controls","muted","plugins","ui","default","data-vjs-player","ref","node","Movie","movieInfo","instances","selection","episodeSelection","mediaCache","serverSelection","loading","selectEpisode","selectOrigin","selectServer","location","origins","episodes","movieInstances","instanceId","ep","servers","parseInt","directSources","direct","mirrorSources","mirrors","iframeSources","iframe","processed","serverName","originsNav","episodesNav","serversNav","origin","selectionName","i","SideBar","data-toggle","data-target","aria-controls","aria-expanded","id","href","App","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.581c2688.chunk.js","sourcesContent":["/*! videojs-resolution-switcher - 2015-7-26\n * Copyright (c) 2016 Kasper Moskwiak\n * Modified by Pierre Kraft\n * Licensed under the Apache-2.0 license. */\n\n(function() {\n  /* jshint eqnull: true*/\n  /* global require */\n  'use strict';\n  var videojs = null;\n  if(typeof window.videojs === 'undefined' && typeof require === 'function') {\n    videojs = require('video.js');\n  } else {\n    videojs = window.videojs;\n  }\n\n  (function(window, videojs) {\n\n\n    var defaults = {},\n        videoJsResolutionSwitcher,\n        currentResolution = {}, // stores current resolution\n        menuItemsHolder = {}; // stores menuItems\n\n    function setSourcesSanitized(player, sources, label, customSourcePicker) {\n      currentResolution = {\n        label: label,\n        sources: sources\n      };\n      if(typeof customSourcePicker === 'function'){\n        return customSourcePicker(player, sources, label);\n      }\n      return player.src(sources.map(function(src) {\n        return {src: src.src, type: src.type, res: src.res};\n      }));\n    }\n\n  /*\n   * Resolution menu item\n   */\n  var MenuItem = videojs.getComponent('MenuItem');\n  var ResolutionMenuItem = videojs.extend(MenuItem, {\n    constructor: function(player, options, onClickListener, label){\n      this.onClickListener = onClickListener;\n      this.label = label;\n      // Sets this.player_, this.options_ and initializes the component\n      MenuItem.call(this, player, options);\n      this.src = options.src;\n\n      this.on('click', this.onClick);\n      this.on('touchstart', this.onClick);\n\n      if (options.initialySelected) {\n        this.showAsLabel();\n        this.selected(true);\n\n        this.addClass('vjs-selected');\n      }\n    },\n    showAsLabel: function() {\n      // Change menu button label to the label of this item if the menu button label is provided\n      if(this.label) {\n        this.label.innerHTML = this.options_.label;\n      }\n    },\n    onClick: function(customSourcePicker){\n      this.onClickListener(this);\n      // Remember player state\n      var currentTime = this.player_.currentTime();\n      var isPaused = this.player_.paused();\n      this.showAsLabel();\n\n      // add .current class\n      this.addClass('vjs-selected');\n\n      // Hide bigPlayButton\n      if(!isPaused){\n        this.player_.bigPlayButton.hide();\n      }\n      if(typeof customSourcePicker !== 'function' &&\n        typeof this.options_.customSourcePicker === 'function'){\n        customSourcePicker = this.options_.customSourcePicker;\n      }\n      // Change player source and wait for loadeddata event, then play video\n      // loadedmetadata doesn't work right now for flash.\n      // Probably because of https://github.com/videojs/video-js-swf/issues/124\n      // If player preload is 'none' and then loadeddata not fired. So, we need timeupdate event for seek handle (timeupdate doesn't work properly with flash)\n      var handleSeekEvent = 'loadeddata';\n      if(this.player_.techName_ !== 'Youtube' && this.player_.preload() === 'none' && this.player_.techName_ !== 'Flash') {\n        handleSeekEvent = 'timeupdate';\n      }\n      setSourcesSanitized(this.player_, this.src, this.options_.label, customSourcePicker).one(handleSeekEvent, function() {\n        this.player_.currentTime(currentTime);\n        this.player_.handleTechSeeked_();\n        if(!isPaused){\n          // Start playing and hide loadingSpinner (flash issue ?)\n          this.player_.play().handleTechSeeked_();\n        }\n        this.player_.trigger('resolutionchange');\n        });\n      }\n    });\n\n\n    /*\n     * Resolution menu button\n     */\n     var MenuButton = videojs.getComponent('MenuButton');\n     var ResolutionMenuButton = videojs.extend(MenuButton, {\n       constructor: function(player, options, settings, label){\n        this.sources = options.sources;\n        this.label = label;\n        this.label.innerHTML = options.initialySelectedLabel;\n        // Sets this.player_, this.options_ and initializes the component\n        MenuButton.call(this, player, options, settings);\n        this.controlText('Quality');\n\n        if(settings.dynamicLabel){\n          this.el().appendChild(label);\n        }else{\n          var staticLabel = document.createElement('span');\n          videojs.addClass(staticLabel, 'vjs-resolution-button-staticlabel');\n          this.el().appendChild(staticLabel);\n        }\n       },\n       createItems: function(){\n         var menuItems = [];\n         var labels = (this.sources && this.sources.label) || {};\n         var onClickUnselectOthers = function(clickedItem) {\n          menuItems.map(function(item) {\n            item.selected(item === clickedItem);\n            item.removeClass('vjs-selected');\n          });\n         };\n\n         for (var key in labels) {\n           if (labels.hasOwnProperty(key)) {\n            menuItems.push(new ResolutionMenuItem(\n              this.player_,\n              {\n                label: key,\n                src: labels[key],\n                initialySelected: key === this.options_.initialySelectedLabel,\n                customSourcePicker: this.options_.customSourcePicker\n              },\n              onClickUnselectOthers,\n              this.label));\n             // Store menu item for API calls\n             menuItemsHolder[key] = menuItems[menuItems.length - 1];\n            }\n         }\n         return menuItems;\n       }\n     });\n\n    /**\n     * Initialize the plugin.\n     * @param {object} [options] configuration for the plugin\n     */\n    videoJsResolutionSwitcher = function(options) {\n      var settings = videojs.mergeOptions(defaults, options),\n          player = this,\n          label = document.createElement('span'),\n          groupedSrc = {};\n\n      videojs.addClass(label, 'vjs-resolution-button-label');\n      \n      /**\n       * Updates player sources or returns current source URL\n       * @param   {Array}  [src] array of sources [{src: '', type: '', label: '', res: ''}]\n       * @returns {Object|String|Array} videojs player object if used as setter or current source URL, object, or array of sources\n       */\n      player.updateSrc = function(src, _options){\n        //Return current src if src is not given\n        if(!src){ return player.src(); }\n        // Dispose old resolution menu button before adding new sources\n        if(player.controlBar.resolutionSwitcher){\n          player.controlBar.resolutionSwitcher.dispose();\n          delete player.controlBar.resolutionSwitcher;\n        }\n        \n        if(_options && _options.hls){\n          player.src(src);\n          return initResolutionForHLS(player);\n        }\n        \n        //Sort sources\n        src = src.sort(compareResolutions);\n        groupedSrc = bucketSources(src);\n        var choosen = chooseSrc(groupedSrc, src);\n        var menuButton = new ResolutionMenuButton(player, { sources: groupedSrc, initialySelectedLabel: choosen.label , initialySelectedRes: choosen.res , customSourcePicker: settings.customSourcePicker}, settings, label);\n        videojs.addClass(menuButton.el(), 'vjs-resolution-button');\n        player.controlBar.resolutionSwitcher = player.controlBar.el_.insertBefore(menuButton.el_, player.controlBar.getChild('fullscreenToggle').el_);\n        player.controlBar.resolutionSwitcher.dispose = function(){\n          this.parentNode.removeChild(this);\n        };\n        return setSourcesSanitized(player, choosen.sources, choosen.label);\n      };\n\n      /**\n       * Returns current resolution or sets one when label is specified\n       * @param {String}   [label]         label name\n       * @param {Function} [customSourcePicker] custom function to choose source. Takes 3 arguments: player, sources, label. Must return player object.\n       * @returns {Object}   current resolution object {label: '', sources: []} if used as getter or player object if used as setter\n       */\n      player.currentResolution = function(label, customSourcePicker){\n        if(label == null) { return currentResolution; }\n        if(menuItemsHolder[label] != null){\n          menuItemsHolder[label].onClick(customSourcePicker);\n        }\n        return player;\n      };\n\n      /**\n       * Returns grouped sources by label, resolution and type\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      player.getGroupedSrc = function(){\n        return groupedSrc;\n      };\n\n      /**\n       * Method used for sorting list of sources\n       * @param   {Object} a - source object with res property\n       * @param   {Object} b - source object with res property\n       * @returns {Number} result of comparation\n       */\n      function compareResolutions(a, b){\n        if(!a.res || !b.res){ return 0; }\n        return (+b.res)-(+a.res);\n      }\n\n      /**\n       * Group sources by label, resolution and type\n       * @param   {Array}  src Array of sources\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      function bucketSources(src){\n        var resolutions = {\n          label: {},\n          res: {},\n          type: {}\n        };\n        src.map(function(source) {\n          initResolutionKey(resolutions, 'label', source);\n          initResolutionKey(resolutions, 'res', source);\n          initResolutionKey(resolutions, 'type', source);\n\n          appendSourceToKey(resolutions, 'label', source);\n          appendSourceToKey(resolutions, 'res', source);\n          appendSourceToKey(resolutions, 'type', source);\n        });\n        return resolutions;\n      }\n\n      function initResolutionKey(resolutions, key, source) {\n        if(resolutions[key][source[key]] == null) {\n          resolutions[key][source[key]] = [];\n        }\n      }\n\n      function appendSourceToKey(resolutions, key, source) {\n        resolutions[key][source[key]].push(source);\n      }\n\n      /**\n       * Choose src if option.default is specified\n       * @param   {Object} groupedSrc {res: { key: [] }}\n       * @param   {Array}  src Array of sources sorted by resolution used to find high and low res\n       * @returns {Object} {res: string, sources: []}\n       */\n      function chooseSrc(groupedSrc, src){\n        var selectedRes = settings['default']; // use array access as default is a reserved keyword\n        var selectedLabel = '';\n        if (selectedRes === 'high') {\n          selectedRes = src[0].res;\n          selectedLabel = src[0].label;\n        } else if (selectedRes === 'low' || selectedRes == null || !groupedSrc.res[selectedRes]) {\n          // Select low-res if default is low or not set\n          selectedRes = src[src.length - 1].res;\n          selectedLabel = src[src.length -1].label;\n        } else if (groupedSrc.res[selectedRes]) {\n          selectedLabel = groupedSrc.res[selectedRes][0].label;\n        }\n        \n        return {res: selectedRes, label: selectedLabel, sources: groupedSrc.res[selectedRes]};\n      }\n      \n      function initResolutionForYt(player){\n        // Init resolution\n        player.tech_.ytPlayer.setPlaybackQuality('default');\n        \n        // Capture events\n        player.tech_.ytPlayer.addEventListener('onPlaybackQualityChange', function(){\n          player.trigger('resolutionchange');\n        });\n        \n        // We must wait for play event\n        player.one('play', function(){\n          var qualities = player.tech_.ytPlayer.getAvailableQualityLevels();\n          // Map youtube qualities names\n          var _yts = {\n            highres: {res: 1080, label: '1080', yt: 'highres'},\n            hd1080: {res: 1080, label: '1080', yt: 'hd1080'}, \n            hd720: {res: 720, label: '720', yt: 'hd720'}, \n            large: {res: 480, label: '480', yt: 'large'},\n            medium: {res: 360, label: '360', yt: 'medium'}, \n            small: {res: 240, label: '240', yt: 'small'},\n            tiny: {res: 144, label: '144', yt: 'tiny'},\n            auto: {res: 0, label: 'auto', yt: 'default'}\n          };\n\n          var _sources = [];\n\n          qualities.map(function(q){\n            _sources.push({\n              src: player.src().src,\n              type: player.src().type,\n              label: _yts[q].label,\n              res: _yts[q].res,\n              _yt: _yts[q].yt\n            });\n          });\n\n          groupedSrc = bucketSources(_sources);\n\n          // Overwrite defualt sourcePicer function\n          var _customSourcePicker = function(_player, _sources, _label){\n            player.tech_.ytPlayer.setPlaybackQuality(_sources[0]._yt);\n            return player;\n          };\n\n          var choosen = {label: 'auto', res: 0, sources: groupedSrc.label.auto};\n          var menuButton = new ResolutionMenuButton(player, { \n            sources: groupedSrc, \n            initialySelectedLabel: choosen.label, \n            initialySelectedRes: choosen.res, \n            customSourcePicker: _customSourcePicker\n          }, settings, label);\n\n          menuButton.el().classList.add('vjs-resolution-button');\n          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n        });\n      }\n      \n      function initResolutionForHLS(player){\n        var hls = player.tech_.hls;\n        if(!hls) { return; }\n        // Capture events\n        player.on('mediachange', function(){\n          player.trigger('resolutionchange');\n        });\n\n        player.one('loadedmetadata', function(){\n          var playlists = hls.playlists.master.playlists;\n          \n          var _sources = [{ src: 'auto', type: 'application/x-mpegURL', label: 'auto', res: 'auto'}];\n          \n          playlists.map(function(value){\n            _sources.push({\n              src: value.uri,\n              type: 'application/x-mpegURL',\n              label: value.attributes.NAME || value.attributes.RESOLUTION.height,\n              res: value.attributes.RESOLUTION.height\n            });\n          });\n          \n          groupedSrc = bucketSources(_sources);\n          \n          var selectPlaylist =  function (selectedResolution){\n            var _selectPlaylist;\n            \n            if(selectedResolution === 'auto'){\n              _selectPlaylist = videojs.HlsHandler.prototype.selectPlaylist;\n              return _selectPlaylist;\n            }\n            \n            _selectPlaylist = function (){\n              return hls.playlists.master.playlists.filter(function (playlist) {\n                return playlist.attributes.RESOLUTION.height === selectedResolution;\n              })[0];\n            };\n            return _selectPlaylist;\n          };\n          \n          // Overwrite defualt sourcePicer function\n          var _customSourcePicker = function(_player, _sources, _label){\n            var selectedRes = _sources[0].res;\n            hls.selectPlaylist = selectPlaylist(selectedRes);\n            return player;\n          };\n          \n          var currentPlaylist = hls.playlists.media();\n          var choosen = {\n            label: 'auto', \n            res: currentPlaylist.attributes.RESOLUTION.height, \n            sources: currentPlaylist\n          };\n          \n          var menuButton = new ResolutionMenuButton(player, { \n            sources: groupedSrc, \n            initialySelectedLabel: choosen.label, \n            initialySelectedRes: choosen.res, \n            customSourcePicker: _customSourcePicker\n          }, settings, label);\n\n          menuButton.el().classList.add('vjs-resolution-button');\n          player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\n        });\n      }\n      \n      player.ready(function(){\n        if(player.options_.sources.length > 1){\n          // tech: Html5 and Flash\n          // Create resolution switcher for videos form <source> tag inside <video>\n          player.updateSrc(player.options_.sources);\n        }\n\n        if(player.tech_.hls && player.options_.sources.length){\n          // HLS support\n          initResolutionForHLS(player);\n        }\n        \n        if(player.techName_ === 'Youtube'){\n          // tech: YouTube\n          initResolutionForYt(player);\n        }\n      });\n\n    };\n\n    // register the plugin\n    videojs.plugin('videoJsResolutionSwitcher', videoJsResolutionSwitcher);\n  })(window, videojs);\n})();","import React from 'react';\nimport { Link } from \"react-router-dom\";\nclass MovieBox extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render(){\n        console.log(this.props)\n        return (<div class=\"card mb-4\" style={{\"width\" : \"18rem\"}}>\n              <img class=\"card-img-top\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/1024px-No_image_available.svg.png\" alt=\"Card image cap\"/>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{this.props.title}</h5>  \n                <h6 class=\"card-title\">{this.props.title_vietnamese}</h6>  \n                <Link to={{pathname: '/movie',\n                           movieId: this.props._id}} className=\"btn btn-primary\">Watch</Link>\n              </div>\n              </div> );\n    }\n}\n\n\nexport default class MoviesList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        let movieboxes = Object.keys(this.props.movies).map(k => {\n            return (<div key={k} className=\"col-md-4\"><MovieBox key={k} {...this.props.movies[k]} /></div>)\n        })\n        return (<div>\n                <div class=\"card-deck\">\n                    <div className=\"row\">\n                       {movieboxes}\n                    </div>\n                </div>\n            </div>)\n    }\n\n}\n","import React from 'react';\nimport MoviesList from \"./MoviesList\"\n\n\nexport default class Search extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n        this.processTextDelay = null;\n        this.processText = this.processText.bind(this)\n        this.state = {movies : {}}\n    }\n\n    handleChange(event) {\n        clearTimeout(this.processTextDelay)\n        let value = event.target.value\n        this.processTextDelay = setTimeout(() => {this.processText(value)}, 500)\n    }  \n\n    processText(txt) { \n        if(txt == \"\")\n            this.setState({\"movies\": {}})\n        fetch(\"/api/movie/search?title=\"+txt)\n        .then(r => r.json())\n        .then(jsonResp => {\n            if(!jsonResp.status)\n                return;\n\n            let movies = []\n            this.setState({\"movies\": jsonResp.response})\n        }).catch(e => console.log(e))\n    }\n\n\n    render() {\n        return ( \n            <div class=\"container\">\n\n                <div className=\"active-cyan-3 active-cyan-4 mb-4\">\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.handleChange}/>\n                </div>\n                <MoviesList {...{\"movies\" : this.state.movies}}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport videojs from 'video.js';\n\nfunction processSources(sources) {\n    let processSources = []\n    sources.forEach(source => {\n        if(!source[\"src\"] || !source[\"type\"])\n            return;\n\n        let src = source[\"src\"];\n        let type = source[\"type\"].includes(\"mp4\") ? \"video/mp4\" : (source[\"type\"].includes(\"hls\") ? \"application/x-mpegURL\" : null);\n        let label = source[\"label\"] ? source[\"label\"] : \"MOV\";\n        if(src && type && label) {\n            console.log(\"here\")\n            processSources.push({\n                src: src,\n                type: type,\n                label: label\n            });\n        }\n    });\n    return processSources;\n}\n\nfunction getVideoServerName(src) {\n    if(src.includes(\"google.com\"))\n        return \"GO\"; \n    return \"UNK\"; // unknown\n\n}\n\nclass IFramePlayer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div>\n            <iframe src={this.props.iframeSrc} scrolling=\"no\" frameborder=\"0\" width=\"100%\" height=\"100%\" allowfullscreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"></iframe>\n            </div>\n        );\n    }\n}\nclass MoviePlayer extends React.Component {\n    \n\n    constructor(props){\n        super(props)\n        this.updatePlayer = this.updatePlayer.bind(this)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        this.updatePlayer(nextProps.movieSrcs);\n        // requires switching from \n        if(nextProps.movieSrcs && nextProps.movieSrcs.length > 0 && nextProps.movieSrcs[0].type == \"iframe\" && this.props.movieSrcs != \"iframe\")\n            return true;\n        return false;\n    }\n\n    updatePlayer(newSrcs) {\n        console.log(newSrcs)\n        if(newSrcs == null)\n            return;\n\n        if(this.player)\n            this.player.src({})\n\n\n        if(!this.player)\n            this.player = videojs(this.videoNode,{\n                controls: true,\n                muted: true,\n                width: 1000,\n                plugins: {\n                    videoJsResolutionSwitcher: {\n                      ui: true,\n                      default: 'low', // Default resolution [{Number}, 'low', 'high'],\n                      dynamicLabel: true // Display dynamic labels or gear symbol\n                    }\n                }\n            }, () => {\n                console.log('onPlayerReady', this);\n                var player = this.player;\n                if(newSrcs.length)\n                {\n                    if(newSrcs[0].type == \"application/x-mpegURL\")\n                        player.updateSrc(newSrcs, {hls:true});\n                    else\n                        player.updateSrc(newSrcs);\n                }\n            });\n        else {\n            if(newSrcs.length)\n            {\n                if(newSrcs[0].type == \"application/x-mpegURL\")\n                    this.player.updateSrc(newSrcs, {hls:true});\n                else\n                    this.player.updateSrc(newSrcs);\n            }\n        }\n    }\n\n\n\n\n    componentDidMount(){\n       \n        if(window) window.videojs = videojs;\n        require('../videojs/videojs-resolution-switcher')\n        require(\"videojs-contrib-hls\");\n        this.updatePlayer(this.props.movieSrcs);\n    }\n\n    render() {\n\n        return(   \n            <div  data-vjs-player>\n                <video ref={ node => this.videoNode = node } className=\"video-js\"></video>\n            </div>\n        );\n\n    }\n}\nexport default class Movie extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {movieId: null, \n                      movieInfo: {}, \n                      instances: {}, \n                      selection: null, \n                      episodeSelection: 0, \n                      mediaCache: {}, \n                      serverSelection: null,\n                      movieSrcs: [],\n                      loading: {\n                        \"origins\": false,\n                        \"episodes\": false,\n                        \"servers\": false,\n                        \"player\": false\n                      }}\n        this.selectEpisode = this.selectEpisode.bind(this)\n        this.selectOrigin = this.selectOrigin.bind(this)\n        this.selectServer = this.selectServer.bind(this)\n        this.mediaCache = {}\n\n    }\n\n    componentDidMount() {\n        console.log(\"here\")\n        let movieId = null;\n        if(this.props.location)\n            movieId = this.props.location.movieId\n        else\n            return\n        this.setState({\"movieId\": movieId});\n        this.setState({loading : {origins: true, episodes:true}});\n        fetch(\"/api/movie/info?movieId=\"+movieId)\n        .then(r => r.json())\n        .then(jsonResp => {\n            if(!jsonResp.status)\n                return;\n            this.setState({movieInfo: jsonResp.response})\n        }).catch(e => console.log(e))\n\n        fetch(\"/api/movie/episodes?movieId=\"+movieId)\n        .then(r => r.json())\n        .then(jsonResp => {\n            if(!jsonResp.status)\n                return;\n            let movieInstances = jsonResp.response\n            if(Object.keys(movieInstances).length > 0) {\n                this.setState({selection: Object.keys(movieInstances).sort()[0], instances: movieInstances, loading : {origins: false, episodes:false}})\n                this.selectOrigin(Object.keys(movieInstances).sort()[0]);\n            }\n        }).catch(e => console.log(e))\n    }\n\n    selectOrigin(instanceId) {\n        if(!(instanceId in this.state.instances))\n            return;\n\n        this.setState({selection: instanceId, movieSrcs: []})\n        this.selectEpisode(instanceId, this.state.episodeSelection);\n    }\n\n    selectEpisode(instanceId, ep) {\n        if(!(instanceId in this.state.instances))\n            return;\n        this.setState({loading : {servers: true}});\n        this.setState({\"episodeSelection\": parseInt(ep), \"selection\": instanceId, movieSrcs: []});\n        if(this.mediaCache[instanceId] && this.mediaCache[instanceId][ep]) {\n            this.setState({loading : {servers: false}});\n            this.selectServer(instanceId, ep, Object.keys(this.mediaCache[instanceId][ep])[0])\n        } else {\n            fetch(`/api/movie/getEpisodeMedia?instanceId=${instanceId}&ep=${ep}`)\n            .then(r => r.json())\n            .then(jsonResp => {\n                if(!jsonResp.status)\n                    return;\n                let directSources = jsonResp.response.sources.direct;\n                let mirrorSources = jsonResp.response.mirrors;\n                let iframeSources = jsonResp.response.sources.iframe;\n                if(!this.mediaCache[instanceId])\n                    this.mediaCache[instanceId] = {}\n                if(!this.mediaCache[instanceId][ep])\n                    this.mediaCache[instanceId][ep] = {}\n\n                directSources.forEach(sources => {\n                    let processed = processSources(sources)\n                    console.log(sources)\n                    if(processed.length > 0){\n                        let serverName = \"SV#\"+Object.keys(this.mediaCache[instanceId][ep]).length\n                        this.mediaCache[instanceId][ep][serverName] = processed\n                    }\n                });\n\n                Object.keys(mirrorSources).forEach(k => {\n                    let processed = processSources(mirrorSources[k]);\n                    if(processed.length > 0){\n                        let serverName = \"Mirror#\"+Object.keys(this.mediaCache[instanceId][ep]).length\n                        this.mediaCache[instanceId][ep][serverName] = processed\n                    }\n                });\n                iframeSources.forEach(sources => {\n                    let processed = sources;\n                    if(processed.length > 0){\n                        let serverName = \"IFRAME#\"+Object.keys(this.mediaCache[instanceId][ep]).length\n                        this.mediaCache[instanceId][ep][serverName] = processed\n                    }\n                });\n                console.log(this.state);\n                this.setState({loading : {episodes: false}});\n                this.selectServer(instanceId, ep, Object.keys(this.mediaCache[instanceId][ep])[0]);\n                this.setState({loading : {servers: false}});\n            })\n        }\n    }\n\n    selectServer(instanceId, ep, serverName){\n        if(serverName in this.mediaCache[instanceId][ep])\n            this.setState({serverSelection: serverName, movieSrcs : this.mediaCache[instanceId][ep][serverName]})\n    }\n\n    render() {\n        let originsNav = []\n        let episodesNav = []\n        let serversNav = []\n        if(Object.keys(this.state.instances).length > 0)\n        {\n            let origins = Object.keys(this.state.instances).map(k => [this.state.instances[k].origin, k]).sort();\n            let selection = this.state.selection ? this.state.selection : Object.keys(this.state.instances).sort()[0];\n            let selectionName = this.state.instances[selection].origin;\n            originsNav = origins.map(origin => {\n                return (<li key={origin[1]} className=\"nav-item\">\n                        <button key={origin[1]} className={\"nav-link \" + (selectionName == origin[0] ? \"active\" : \"\")} \n                         onClick={this.selectOrigin.bind(this, origin[1])}>{origin[0]}</button>\n                      </li>)\n            });\n            let episodes = this.state.instances[selection].episodes;\n            episodesNav = episodes.map((ep,i) => {\n                return (<li key={selection+\"_\"+i} className=\"nav-item\">\n                    <button key={selection+\"_\"+i} className={\"nav-link \" + (i == this.state.episodeSelection ? \"active\" : \"\")}  \n                            onClick={this.selectEpisode.bind(this, selection, i)}>{ep}</button>\n                </li>)\n            });\n            console.log(this.mediaCache[selection])\n            if(this.mediaCache[selection] && this.mediaCache[selection][this.state.episodeSelection]) {\n                let servers = this.mediaCache[selection][this.state.episodeSelection];\n                let serverSelection = this.state.serverSelection ? this.state.serverSelection : Object.keys(this.mediaCache[selection][this.state.episodeSelection])[0];\n                serversNav = Object.keys(servers).map(k => {\n                    return (<li key={selection+\"_\"+this.state.episodeSelection+\"_\"+k} className=\"nav-item\">\n                        <button key={selection+\"_\"+this.state.episodeSelection+\"_\"+k} className={\"nav-link \" + (k == serverSelection ? \"active\" : \"\")}  \n                                onClick={this.selectServer.bind(this, selection, this.state.episodeSelection, k)}>{k}</button>\n                    </li>)\n                })\n            }\n\n        }\n        return (\n        <div className=\"container\">\n            <h3>{this.state.movieInfo.title ? this.state.movieInfo.title : \"Loading...\"}</h3>\n             {this.state.movieSrcs.length > 0 && this.state.movieSrcs[0].type != \"iframe\" ? <MoviePlayer movieSrcs={this.state.movieSrcs}/> :\n                 <IFramePlayer iframeSrc={this.state.movieSrcs.length ? this.state.movieSrcs[0].src : \"\"}/> }\n                 {this.state.loading.player ? (<img src=\"./loading.gif\"/>) : null}\n            <div className=\"card\" style={{\"textAlign\": \"left\"}}>\n              <div className=\"card-header\">\n                <ul className=\"nav nav-pills card-header-pills\">\n                  {originsNav}\n                  {this.state.loading.origins ? (<img src=\"./loading.gif\"/>) : null}\n                </ul>\n              </div>\n              <div className=\"card-body\">\n                <ul className=\"nav nav-pills\">\n                  {episodesNav}\n                  {this.state.loading.episodes ? (<img src=\"./loading.gif\"/>) : null}\n                </ul>\n                <div className=\"card-body\">\n                    <h6>Servers</h6>\n                    <ul className=\"nav nav-pills\">\n                      {serversNav}\n                      {this.state.loading.servers ? (<img src=\"./loading.gif\"/>) : null}\n                    </ul>\n              </div>\n              </div>\n\n            </div>\n        </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nexport default class SideBar extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n           \n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                <Link className=\"navbar-brand\" to=\"/\">TurboFilm</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                  <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                      <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a className=\"nav-link\" href=\"#\">Link</a>\n                    </li>\n                  </ul>\n                </div>\n            </nav>\n      )\n\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from \"./views/Search.js\"\nimport Movie from \"./views/Movie.js\"\nimport NavBar from \"./views/NavBar.js\"\nimport { BrowserRouter as Router,\n  Switch,\n  Route,\n  Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <header>\n        <NavBar/>\n    </header>\n    <div className=\"container\">\n \n       {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/movie\" component={Movie}>\n          </Route>\n          <Route path=\"/\">\n            <Search />\n          </Route>\n        </Switch>\n    </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}